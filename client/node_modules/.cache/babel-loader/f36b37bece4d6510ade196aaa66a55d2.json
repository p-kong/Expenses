{"ast":null,"code":"var _jsxFileName = \"/Users/pauline/Desktop/ExtraPractice/practice/expense/client/src/context/Auth.js\";\nimport React, { useState } from 'react';\nexport const AuthContext = React.createContext({\n  isAuth: false,\n  login: () => {\n    const loginHandler = () => {\n      console.log('in Auth Context');\n      setIsAuthenticated(true);\n      console.log('isAuthenticated', isAuthenticated);\n    };\n  }\n});\n\nconst AuthContextProvider = props => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      login: loginHandler,\n      isAuth: isAuthenticated\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthContextProvider;","map":{"version":3,"sources":["/Users/pauline/Desktop/ExtraPractice/practice/expense/client/src/context/Auth.js"],"names":["React","useState","AuthContext","createContext","isAuth","login","loginHandler","console","log","setIsAuthenticated","isAuthenticated","AuthContextProvider","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,CAAoB;AAC7CC,EAAAA,MAAM,EAAE,KADqC;AAE7CC,EAAAA,KAAK,EAAE,MAAM;AACX,UAAMC,YAAY,GAAG,MAAM;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAC,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,eAA/B;AACD,KAJD;AAKD;AAR4C,CAApB,CAApB;;AAWP,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACF,eAAD,EAAkBD,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAEC,YAAT;AAAuBF,MAAAA,MAAM,EAAEM;AAA/B,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGE,KAAK,CAACC,QAHT,CADF;AAOD,CAVD;;AAWA,eAAeF,mBAAf","sourcesContent":["import React, { useState } from 'react';\n\nexport const AuthContext = React.createContext({\n  isAuth: false,\n  login: () => {\n    const loginHandler = () => {\n      console.log('in Auth Context');\n      setIsAuthenticated(true);\n      console.log('isAuthenticated', isAuthenticated);\n    };\n  },\n});\n\nconst AuthContextProvider = (props) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  return (\n    <AuthContext.Provider\n      value={{ login: loginHandler, isAuth: isAuthenticated }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\nexport default AuthContextProvider;\n"]},"metadata":{},"sourceType":"module"}