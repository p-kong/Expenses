{"ast":null,"code":"var _jsxFileName = \"/Users/pauline/Desktop/ExtraPractice/practice/expense/client/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; //Initial State\n\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; //Create context\n\nexport const GlobalContext = createContext(initialState); //Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); //Actions\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/transactions');\n      dispatch({\n        type: 'GET_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: 'Error'\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      const res = await axios.delete('/transactions/:id');\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: res.data.data\n      });\n      console.log('data', res.data.data);\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: 'Error'\n      });\n    }\n\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      getTransactions,\n      deleteTransaction,\n      addTransaction,\n      error: state.error,\n      loading: state.loading\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/pauline/Desktop/ExtraPractice/practice/expense/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","deleteTransaction","id","delete","console","log","addTransaction","transaction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB,C,CAMA;;AAEA,OAAO,MAAMC,aAAa,GAAGR,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC,CAD8C,CAG9C;;AACA,iBAAeS,eAAf,GAAiC;AAC/B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,eAAV,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,iBAAR;AAA2BC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAA7C,OAAD,CAAR;AACD,KAHD,CAGE,OAAOZ,KAAP,EAAc;AACdM,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,mBAAR;AAA6BC,QAAAA,OAAO,EAAE;AAAtC,OAAD,CAAR;AACD;AACF;;AAED,iBAAeE,iBAAf,CAAiCC,EAAjC,EAAqC;AACnC,QAAI;AACF,YAAMN,GAAG,GAAG,MAAMX,KAAK,CAACkB,MAAN,CAAa,mBAAb,CAAlB;AACAT,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,oBAAR;AAA8BC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAAhD,OAAD,CAAR;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBT,GAAG,CAACI,IAAJ,CAASA,IAA7B;AACD,KAJD,CAIE,OAAOZ,KAAP,EAAc;AACdM,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,mBAAR;AAA6BC,QAAAA,OAAO,EAAE;AAAtC,OAAD,CAAR;AACD;;AACDL,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,oBAAR;AAA8BC,MAAAA,OAAO,EAAEG;AAAvC,KAAD,CAAR;AACD;;AAED,WAASI,cAAT,CAAwBC,WAAxB,EAAqC;AACnCb,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,OAAO,EAAEQ;AAApC,KAAD,CAAR;AACD;;AAED,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLpB,MAAAA,YAAY,EAAEM,KAAK,CAACN,YADf;AAELQ,MAAAA,eAFK;AAGLM,MAAAA,iBAHK;AAILK,MAAAA,cAJK;AAKLlB,MAAAA,KAAK,EAAEK,KAAK,CAACL,KALR;AAMLC,MAAAA,OAAO,EAAEI,KAAK,CAACJ;AANV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGG,QAVH,CADF;AAcD,CA1CM","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n//Initial State\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true,\n};\n\n//Create context\n\nexport const GlobalContext = createContext(initialState);\n\n//Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  //Actions\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/transactions');\n      dispatch({ type: 'GET_TRANSACTION', payload: res.data.data });\n    } catch (error) {\n      dispatch({ type: 'TRANSACTION_ERROR', payload: 'Error' });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      const res = await axios.delete('/transactions/:id');\n      dispatch({ type: 'DELETE_TRANSACTION', payload: res.data.data });\n      console.log('data', res.data.data);\n    } catch (error) {\n      dispatch({ type: 'TRANSACTION_ERROR', payload: 'Error' });\n    }\n    dispatch({ type: 'DELETE_TRANSACTION', payload: id });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({ type: 'ADD_TRANSACTION', payload: transaction });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        getTransactions,\n        deleteTransaction,\n        addTransaction,\n        error: state.error,\n        loading: state.loading,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}