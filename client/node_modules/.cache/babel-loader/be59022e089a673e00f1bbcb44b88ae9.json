{"ast":null,"code":"var _jsxFileName = \"/Users/pauline/Desktop/ExtraPractice/practice/expense/client/src/components/IncExp.js\";\nimport React, { useContext } from 'react';\nimport { numberWithCommas } from '../utils/format';\nimport { GlobalContext } from '../context/GlobalState';\n\nconst Income = () => {\n  const {\n    transactions\n  } = useContext(GlobalContext);\n  const amounts = transactions.map(transaction => transaction.amount);\n  let income = amounts.filter(amount => amount > 0).reduce((accum, next) => accum += next, 0).toFixed(2);\n  let expense = amounts.filter(amount => amount < 0).reduce((accum, next) => accum += next, 0).toFixed(2);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inc-exp-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Income\"), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"money-plus\",\n    className: \"money plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"$ \", numberWithCommas(income))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Expenses\"), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"money-minus\",\n    className: \"money minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"$ \", expense)));\n};\n\nexport default Income;","map":{"version":3,"sources":["/Users/pauline/Desktop/ExtraPractice/practice/expense/client/src/components/IncExp.js"],"names":["React","useContext","numberWithCommas","GlobalContext","Income","transactions","amounts","map","transaction","amount","income","filter","reduce","accum","next","toFixed","expense"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAmBJ,UAAU,CAACE,aAAD,CAAnC;AAEA,QAAMG,OAAO,GAAGD,YAAY,CAACE,GAAb,CAAkBC,WAAD,IAAiBA,WAAW,CAACC,MAA9C,CAAhB;AAEA,MAAIC,MAAM,GAAGJ,OAAO,CACjBK,MADU,CACFF,MAAD,IAAYA,MAAM,GAAG,CADlB,EAEVG,MAFU,CAEH,CAACC,KAAD,EAAQC,IAAR,KAAkBD,KAAK,IAAIC,IAFxB,EAE+B,CAF/B,EAGVC,OAHU,CAGF,CAHE,CAAb;AAKA,MAAIC,OAAO,GAAGV,OAAO,CAClBK,MADW,CACHF,MAAD,IAAYA,MAAM,GAAG,CADjB,EAEXG,MAFW,CAEJ,CAACC,KAAD,EAAQC,IAAR,KAAkBD,KAAK,IAAIC,IAFvB,EAE8B,CAF9B,EAGXC,OAHW,CAGH,CAHG,CAAd;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,IAAA,EAAE,EAAC,YAAN;AAAmB,IAAA,SAAS,EAAC,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKb,gBAAgB,CAACQ,MAAD,CADrB,CAFF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,IAAA,EAAE,EAAC,aAAN;AAAoB,IAAA,SAAS,EAAC,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKM,OADL,CAFF,CAPF,CADF;AAgBD,CA/BD;;AAiCA,eAAeZ,MAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { numberWithCommas } from '../utils/format';\nimport { GlobalContext } from '../context/GlobalState';\n\nconst Income = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  let income = amounts\n    .filter((amount) => amount > 0)\n    .reduce((accum, next) => (accum += next), 0)\n    .toFixed(2);\n\n  let expense = amounts\n    .filter((amount) => amount < 0)\n    .reduce((accum, next) => (accum += next), 0)\n    .toFixed(2);\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p id=\"money-plus\" className=\"money plus\">\n          $ {numberWithCommas(income)}\n        </p>\n      </div>\n      <div>\n        <h4>Expenses</h4>\n        <p id=\"money-minus\" className=\"money minus\">\n          $ {expense}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Income;\n"]},"metadata":{},"sourceType":"module"}