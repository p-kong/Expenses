{"ast":null,"code":"var _jsxFileName = \"/Users/pauline/Desktop/ExtraPractice/practice/expense/client/src/context/Auth.js\";\nimport React, { useState } from 'react';\nconst initialState = {\n  isAuth: false,\n  login: () => {}\n};\nexport const AuthContext = console.log('auth', React.createContext(initialState));\n\nconst AuthContextProvider = props => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const loginHandler = () => {\n    console.log('in Auth Context');\n    setIsAuthenticated(true);\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      login: loginHandler,\n      isAuth: isAuthenticated\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthContextProvider;","map":{"version":3,"sources":["/Users/pauline/Desktop/ExtraPractice/practice/expense/client/src/context/Auth.js"],"names":["React","useState","initialState","isAuth","login","AuthContext","console","log","createContext","AuthContextProvider","props","isAuthenticated","setIsAuthenticated","loginHandler","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,KADW;AAEnBC,EAAAA,KAAK,EAAE,MAAM,CAAE;AAFI,CAArB;AAKA,OAAO,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CACzB,MADyB,EAEzBP,KAAK,CAACQ,aAAN,CAAoBN,YAApB,CAFyB,CAApB;;AAKP,MAAMO,mBAAmB,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMY,YAAY,GAAG,MAAM;AACzBP,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAK,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAHD;;AAKA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAER,MAAAA,KAAK,EAAES,YAAT;AAAuBV,MAAAA,MAAM,EAAEQ;AAA/B,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGD,KAAK,CAACI,QAHT,CADF;AAOD,CAfD;;AAgBA,eAAeL,mBAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst initialState = {\n  isAuth: false,\n  login: () => {},\n};\n\nexport const AuthContext = console.log(\n  'auth',\n  React.createContext(initialState)\n);\n\nconst AuthContextProvider = (props) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const loginHandler = () => {\n    console.log('in Auth Context');\n    setIsAuthenticated(true);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ login: loginHandler, isAuth: isAuthenticated }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\nexport default AuthContextProvider;\n"]},"metadata":{},"sourceType":"module"}