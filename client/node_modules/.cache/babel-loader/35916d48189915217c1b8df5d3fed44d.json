{"ast":null,"code":"var _jsxFileName = \"/Users/pauline/Desktop/ExtraPractice/practice/expense/client/src/context/Auth.js\";\nimport React, { useState } from 'react';\nconst initialState = {\n  isAuth: false,\n  login: null\n};\nexport const AuthContext = React.createContext(initialState);\n\nconst AuthContextProvider = props => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const loginHandler = () => {\n    console.log('in Auth Context');\n    setIsAuthenticated(true);\n    console.log('isAuthenticated', isAuthenticated);\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      login: loginHandler,\n      isAuth: isAuthenticated\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthContextProvider;","map":{"version":3,"sources":["/Users/pauline/Desktop/ExtraPractice/practice/expense/client/src/context/Auth.js"],"names":["React","useState","initialState","isAuth","login","AuthContext","createContext","AuthContextProvider","props","isAuthenticated","setIsAuthenticated","loginHandler","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,KADW;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,OAAO,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,CAAoBJ,YAApB,CAApB;;AAEP,MAAMK,mBAAmB,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMU,YAAY,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAH,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,eAA/B;AACD,GAJD;;AAMA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAK,EAAEO,YAAT;AAAuBR,MAAAA,MAAM,EAAEM;AAA/B,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGD,KAAK,CAACM,QAHT,CADF;AAOD,CAhBD;;AAiBA,eAAeP,mBAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst initialState = {\n  isAuth: false,\n  login: null,\n};\n\nexport const AuthContext = React.createContext(initialState);\n\nconst AuthContextProvider = (props) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const loginHandler = () => {\n    console.log('in Auth Context');\n    setIsAuthenticated(true);\n    console.log('isAuthenticated', isAuthenticated);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ login: loginHandler, isAuth: isAuthenticated }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\nexport default AuthContextProvider;\n"]},"metadata":{},"sourceType":"module"}